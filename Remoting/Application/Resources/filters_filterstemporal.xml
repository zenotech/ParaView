<ServerManagerConfiguration>
  <ProxyGroup name="filters">
    <!-- ==================================================================== -->
    <SourceProxy class="vtkCriticalTime"
                 label="Critical Time"
                 name="CriticalTime">
      <Documentation long_help="Compute critical time values for the choosen data array"
                     short_help="Compute critical time values">
        Given an input that changes over time and a point/cell array, the **Critical Time**
        filter generates a new point/cell array containing time step values.
        These values correspond to the time at which a specified threshold criterion
        has been met for the selected input array, at each point/cell respectively.
        The name of this array is the same of the selected array with '_critical_time'
        appended at the end. Other point/cell arrays are discarded.
        This filter processes all available time steps. If the criterion is never met
        for a given point/cell, a NaN value is assigned. The output of this filter is
        not temporal.
      </Documentation>
      <InputProperty command="SetInputConnection"
                     name="Input">
        <ProxyGroupDomain name="groups">
          <Group name="sources" />
          <Group name="filters" />
        </ProxyGroupDomain>
        <DataTypeDomain name="input_type">
          <DataType value="vtkDataSet" />
        </DataTypeDomain>
        <InputArrayDomain name="input_array" />
        <Documentation>
          Set the input to the **Critical Time** filter.
        </Documentation>
      </InputProperty>

      <DoubleVectorProperty command="SetLowerThreshold"
                            default_values="0.0"
                            name="LowerThreshold"
                            number_of_elements="1">
        <Documentation>
          This value specifies the lower threshold.
        </Documentation>
        <Hints>
          <PropertyWidgetDecorator type="CompositeDecorator">
            <Expression type="or">
              <PropertyWidgetDecorator type="GenericDecorator" mode="visibility" property="ThresholdCriterion" value="0" />
              <PropertyWidgetDecorator type="GenericDecorator" mode="visibility" property="ThresholdCriterion" value="1" />
            </Expression>
          </PropertyWidgetDecorator>
        </Hints>
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetUpperThreshold"
                            default_values="0.0"
                            name="UpperThreshold"
                            number_of_elements="1">
        <Documentation>
          This value specifies the upper threshold.
        </Documentation>
        <Hints>
          <PropertyWidgetDecorator type="CompositeDecorator">
            <Expression type="or">
              <PropertyWidgetDecorator type="GenericDecorator" mode="visibility" property="ThresholdCriterion" value="0" />
              <PropertyWidgetDecorator type="GenericDecorator" mode="visibility" property="ThresholdCriterion" value="2" />
            </Expression>
          </PropertyWidgetDecorator>
        </Hints>
      </DoubleVectorProperty>
      <IntVectorProperty command="SetThresholdCriterion"
                         default_values="2"
                         name="ThresholdCriterion"
                         number_of_elements="1"
                         panel_visibility="default">
        <EnumerationDomain name="enum">
          <Entry text="Between" value="0"/>
          <Entry text="Below Lower Threshold" value="1"/>
          <Entry text="Above Upper Threshold" value="2"/>
        </EnumerationDomain>
        <Documentation>
          This property indicates the threshold criterion used to generate the critical time values.
        </Documentation>
      </IntVectorProperty>
      <StringVectorProperty command="SetInputArrayToProcess"
                            element_types="0 0 0 0 2"
                            label="Scalars"
                            name="SelectInputScalars"
                            number_of_elements="5">
        <ArrayListDomain name="array_list" input_domain_name="input_array">
          <RequiredProperties>
            <Property function="Input"
                      name="Input" />
          </RequiredProperties>
        </ArrayListDomain>
        <Documentation>
          The value of this property contains the name of the array from which to generate
          the critical time values.
        </Documentation>
      </StringVectorProperty>
      <IntVectorProperty command="SetComponentMode"
                         name="ComponentMode"
                         default_values="0"
                         number_of_elements="1">
        <EnumerationDomain name="enum">
          <Entry text="Selected"
                 value="0" />
          <Entry text="All"
                 value="1" />
          <Entry text="Any"
                 value="2" />
        </EnumerationDomain>
        <Documentation>
          This property specifies how multi-component arrays are handled.
          'Selected' will use the 'Selected Component' property.
          'All' will pass if all components satisfy the threshold criterion.
          'Any' will pass if any component satisfies the threshold criterion.
        </Documentation>
      </IntVectorProperty>
      <IntVectorProperty command="SetSelectedComponent"
                         name="SelectedComponent"
                         default_values="0"
                         number_of_elements="1">
        <NumberOfComponentsDomain name="comps" enable_magnitude="1">
          <RequiredProperties>
            <Property function="Input"
                      name="Input" />
            <Property function="ArraySelection"
                      name="SelectInputScalars" />
          </RequiredProperties>
        </NumberOfComponentsDomain>
        <Hints>
          <PropertyWidgetDecorator type="GenericDecorator" mode="enabled_state" property="ComponentMode" value="0" />
        </Hints>
        <Documentation>
          This property specifies which component of the array needs to satisfy the threshold criterion.
        </Documentation>
      </IntVectorProperty>

      <Hints>
        <WarnOnCreate>
          <Text title="Potentially slow operation">
            The **Critical Time** filter needs to process all timesteps available in your dataset
            and can potentially take a long time to complete. Do you want to continue?
          </Text>
        </WarnOnCreate>
      </Hints>
      <!-- End Critical Time -->
    </SourceProxy>

    <!-- ==================================================================== -->
    <SourceProxy name="ForceStaticMesh" class="vtkForceStaticMesh" label="Force Static Mesh">
      <Documentation
          long_help="This filter caches its input the first time it is executed then use it as a static mesh"
          short_help="Force output to be a static mesh">
          The Force Static Mesh filter create a cache the first time it is executed using its input. It will then only
          update PointData, CellData and FieldData from the input as long as their dimensions stay the same.
          This filter operates only on a vtkUnstructuredGrid input or on the first block of a multiblock input
          if it is a vtkUnstructuredGrid.
      </Documentation>
      <InputProperty command="SetInputConnection"
                    name="Input">
        <ProxyGroupDomain name="groups">
          <Group name="sources" />
          <Group name="filters" />
        </ProxyGroupDomain>
        <DataTypeDomain name="input_type">
          <DataType value="vtkUnstructuredGrid" />
          <DataType value="vtkPolyData" />
          <DataType value="vtkCompositeDataSet" />
        </DataTypeDomain>
        <Documentation>This property specifies the input of the filter.</Documentation>
      </InputProperty>
      <IntVectorProperty
          name="ForceCacheComputation"
          command="SetCacheComputation"
          default_values="0"
          panel_visibility="advanced" >
        <BooleanDomain name="bool" />
        <Documentation>
          Set this to true to force this filter to recompute the cache instead of using it.
        </Documentation>
      </IntVectorProperty>
      <!-- End Force Static Mesh -->
    </SourceProxy>

    <!-- ==================================================================== -->
    <SourceProxy class="vtkTemporalSmoothing"
                 label="Temporal Smoothing"
                 name="TemporalSmoothing">
      <Documentation long_help="This filter smooths a temporal input's point and cell data by computing an average over a temporal window."
                     short_help="Smooths a temporal input over a sliding temporal window.">
                     Given an input that changes over time, Temporal Smoothing will provide an average
                     of each point and cell data values over a temporal window centered on a requested time step.
                     Because of this, the input's topology is assumed to not change over time, and so the number and order
                     of its points and cells should stay the same. In order to provide comparable results for different time steps,
                     the temporal window must be the same size. To enforce this the filter clips its input available time steps
                     to allow the full window size to fit. If an out-of-bound time step is requested, the filter will use the closest available time step.
                     Note that updating this filter will trigger upstream updates for each time steps of the window, which could be expensive.
      </Documentation>
      <InputProperty command="SetInputConnection"
                     name="Input">
        <ProxyGroupDomain name="groups">
          <Group name="sources" />
          <Group name="filters" />
        </ProxyGroupDomain>
        <DataTypeDomain name="input_type">
          <DataType value="vtkDataSet" />
        </DataTypeDomain>
        <Documentation>Set the input to the Temporal Smoothing
        filter.</Documentation>
      </InputProperty>
      <IntVectorProperty command="SetTemporalWindowHalfWidth"
                         default_values="10"
                         name="TemporalWindowHalfWidth"
                         number_of_elements="1">
        <Documentation>
          Set the temporal window half width. When requesting a time step, the associated data
          will be smoothed using this number of time steps before and after it. The resulting window's width is (halfwidth*2)+1
          time steps. This property also influences the number of timesteps produced by the filter to exclude time steps where
          the full window cannot be applied.
        </Documentation>
      </IntVectorProperty>
      <DoubleVectorProperty information_only="1"
                            name="TimestepValues">
        <TimeStepsInformationHelper />
      </DoubleVectorProperty>
      <!-- End TemporalSmoothing -->
    </SourceProxy>
  </ProxyGroup>
</ServerManagerConfiguration>
